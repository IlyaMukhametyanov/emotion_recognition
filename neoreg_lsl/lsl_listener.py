from pylsl import StreamInlet, resolve_streams
import time

def connect_to_lsl(target_name):
    """–ò—â–µ—Ç –ø–æ—Ç–æ–∫ –ø–æ –∏–º–µ–Ω–∏ –∏ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –Ω–µ–º—É."""
    print(f"üîç –ò—â–µ–º –ø–æ—Ç–æ–∫ —Å –∏–º–µ–Ω–µ–º '{target_name}'...")
    streams = resolve_streams()
    target_stream = None
    for stream in streams:
        if stream.name() == target_name:
            target_stream = stream
            break

    if target_stream is None:
        print(f"‚ùå –ü–æ—Ç–æ–∫ '{target_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return None

    print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –ø–æ—Ç–æ–∫—É: {target_stream.name()}")
    inlet = StreamInlet(target_stream)
    return inlet


def record_eeg_to_file(inlet, filename="eeg_data.txt", duration=100):
    """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ EEG –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –≤ —Ç–µ—á–µ–Ω–∏–µ duration —Å–µ–∫—É–Ω–¥."""
    print(f"üìÑ –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª '{filename}'...")
    start_time = time.time()

    with open(filename, 'w') as f:
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        f.write("timestamp\t" + "\t".join([f"ch{i + 1}" for i in range(inlet.info().channel_count())]) + "\n")

        while time.time() - start_time < duration:
            sample, timestamp = inlet.pull_sample(timeout=1.0)
            if sample is not None:
                line = f"{timestamp:.6f}\t" + "\t".join([f"{val:.6f}" for val in sample]) + "\n"
                f.write(line)

    print("‚úÖ –ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")